# svg-filter

This is a small hack that I use for discrete SVG transitions in `pandoc`/Beamer presentations. In particular, `svg-filter` is a `pandoc` filter which looks for image nodes with specially-formatted alt-text and modifies the SVG according to a simple filter description given in a small DSL.

## Grammar

```bnf
<filter> = <action> +

action = '!reset'          -- reset filter state
       | '!show-all'       -- show all layers
       | '!hide-all'       -- hide all layers
       | '!last'           -- show all layers shown in last figure
       | '+' item          -- show matching layers
       | '-' item          -- hide matching layers
       | '!hide-once' item -- hide matching layers without affecting filter state
       | item              -- show matching layers without affecting filter state

item   = '#' regex         -- match on `id` field
       | regex             -- match on `inkscape:label` field

regex  = '?'               -- single character wildcard
       | '*'               -- wildcard
       | character         -- match character
```


## Example

Filter expressions are denoted by an inline code block beginning with the text `svg-filter:`. The following will show `figure.svg`, hiding all elements but those named `layer1` and `layer2`:
```markdown
![`svg-filter:!only layer1 layer2`](figure.svg)
```
Filters are stateful; with the `!last` directive one can reuse the last filter of a particular image (identified by the filename). The following will show `figure.svg`, but this time hiding `layer1` and showing `layer3`:
```markdown
![`svg-filter:!last -layer1 +layer3`](figure.svg)
```
One can also set the opacity of an element; the following will lighten `layer3` to 50% opacity:
```markdown
![`svg-filter:!last layer3=0.5`](figure.svg)
```

## Usage

Simply add the `svg-filter` filter to your `pandoc` invocation:
```sh
pandoc --to=beamer --filter=svg-filter talk.mkd
```
